{
  "name": "com.unity.addressables",
  "displayName": "Addressables",
  "version": "2.7.0",
  "unity": "2023.1",
  "description": "The Addressable Asset System allows the developer to ask for an asset via its address. Once an asset (e.g. a prefab) is marked \"addressable\", it generates an address which can be called from anywhere. Wherever the asset resides (local or remote), the system will locate it and its dependencies, then return it.\n\nUse 'Window->Asset Management->Addressables' to begin working with the system.\n\nAddressables use asynchronous loading to support loading from any location with any collection of dependencies. Whether you have been using direct references, traditional asset bundles, or Resource folders, addressables provide a simpler way to make your game more dynamic. Addressables simultaneously opens up the world of asset bundles while managing all the complexity.\n\nFor usage samples, see github.com/Unity-Technologies/Addressables-Sample",
  "keywords": [
    "asset",
    "resources",
    "bundle",
    "bundles",
    "assetbundles"
  ],
  "dependencies": {
    "com.unity.scriptablebuildpipeline": "2.4.1",
    "com.unity.modules.assetbundle": "1.0.0",
    "com.unity.modules.imageconversion": "1.0.0",
    "com.unity.modules.jsonserialize": "1.0.0",
    "com.unity.modules.unitywebrequest": "1.0.0",
    "com.unity.modules.unitywebrequestassetbundle": "1.0.0",
    "com.unity.profiling.core": "1.0.2",
    "com.unity.test-framework": "1.4.5"
  },
  "samples": [
    {
      "displayName": "Addressables Utility",
      "description": "This sample contains a set of utility functions for Addressables.",
      "path": "Samples~/AddressablesUtility"
    },
    {
      "displayName": "ComponentReference",
      "description": "This sample creates an AssetReference that is restricted to having a specific Component. See the ComponentReference sample project located at github.com/Unity-Technologies/Addressables-Sample",
      "path": "Samples~/ComponentReference"
    },
    {
      "displayName": "Custom Analyze Rules",
      "description": "This sample shows how to create custom AnalyzeRules for use within the Analyze window. Both rules follow the recommended pattern for adding themselves to the UI. See the Custom Analyze Rules sample project located at github.com/Unity-Technologies/Addressables-Sample",
      "path": "Samples~/CustomAnalyzeRules"
    },
    {
      "displayName": "Custom Build and Playmode Scripts",
      "description": "Example custom build and play mode scripts provided.  Along with a README discussing how to add them to the Addressables system.",
      "path": "Samples~/CustomBuildAndPlaymodeScripts"
    },
    {
      "displayName": "Disable AssetImport on Build",
      "description": "A script that disables asset importing during a player build.  This improves build performance since AssetBundles are copied into StreamingAssets at build time.",
      "path": "Samples~/DisableAssetImportOnBuild"
    },
    {
      "displayName": "Import Groups Tool",
      "description": "A tool that imports group assets (for example from a custom package) to the current project.",
      "path": "Samples~/ImportExistingGroup"
    },
    {
      "displayName": "Prefab Spawner",
      "description": "A basic script that instantiates and destroys a prefab AssetReference.",
      "path": "Samples~/PrefabSpawner"
    }
  ],
  "_upm": {
    "changelog": "- Fixed issue where strikethrough appears on labels when reordering addressables labels in the labels window.\n- Changed GetDownloadSizeAsync to actually use an AsyncOperation and run the calculation as part of a coroutine.\n- Fix for CCD Upload Issue with Packed Separately Bundles.\n- Fixed an issue where you weren't able to assign Sprites in a AssetReferenceAtlasedSprite if the Atlas was a variant.\n- Fixed an issue when \"Use Defaults\" was selected for a Group. When building for Android the local settings were used for remote groups. This effectively disabled caching.\n- Fixed an issue where Profiler runtime data was not stripped for non-development builds.\n- Improved memory usage when using binary catalogs.\n- Improved performance of the Addressable Groups editor window for large projects - this should be noticable when first launching the window, and when searching for assets.\n- Fixed an issue where the Addressables Profiler Module would not work properly when using a standalone Profiler process.\n- Fix an issue where Custom group settings were not correctly applied to built-in bundles.\n- Revert name change to prevent gameobject warning on group Rename\n- Added Preserve attribute to prevent stripping of RuntimePath property"
  },
  "upmCi": {
    "footprint": "5cb7fa9f436ab74e10fd99ddbb6ac0f7a1e3226c"
  },
  "documentationUrl": "https://docs.unity3d.com/Packages/com.unity.addressables@2.7/manual/index.html",
  "repository": {
    "url": "https://github.cds.internal.unity3d.com/unity/Addressables.git",
    "type": "git",
    "revision": "55af73f5199366815860539425454db98bb80d35"
  }
}
